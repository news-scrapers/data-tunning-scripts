demo()
setwd(".")
ine_data <- read.csv("procesado_suicidio_edad_ambos_hasta_2007.csv",  header=TRUE, sep=";")
setwd("./")
ine_data <- read.csv("procesado_suicidio_edad_ambos_hasta_2007.csv",  header=TRUE, sep=";")
setwd("/home/hugo/Documents/hugo_documentos/github/data-tunning-scripts/plot-time-series-data")
ine_data <- read.csv("procesado_suicidio_edad_ambos_hasta_2007.csv",  header=TRUE, sep=";")
scraping_data_filtered <- read.csv("scraped_news_suicide_data_sorted_2017_2007_filtrado.csv",  header=TRUE, sep=";")
setwd("/home/hugo/Documents/hugo_documentos/github/data-tunning-scripts/plot-time-series-data")
ine_data <- read.csv("procesado_suicidio_edad_ambos_hasta_2007.csv",  header=TRUE, sep=";")
scraping_data_filtered <- read.csv("scraped_news_suicide_data_sorted_2017_2007_filtrado.csv",  header=TRUE, sep=";")
all_data <- read.csv("all_2007-2017.csv",  header=TRUE, sep=";")
# Installation
# install.packages('ggplot2')
# Loading
library(ggplot2)
install.packages('ggplot2')
# Installation
# install.packages('ggplot2')
# Loading
library(ggplot2)
install.packages('lubridate')
ine_data$month_code <- ymd(ine_data$month_code)
scraping_data_filtered$month_code <- ymd(scraping_data_filtered$month_code)
ggplot(ine_data, aes(month_code, todas_edades)) + geom_line() + xlab("") + ylab("Suicidios")
View(scraping_data_filtered)
View(ine_data)
View(all_data)
setwd("/home/hugo/Documents/hugo_documentos/github/data-tunning-scripts/plot-time-series-data")
ine_data <- read.csv("procesado_suicidio_edad_ambos_hasta_2007.csv",  header=TRUE, sep=";")
scraping_data_filtered <- read.csv("scraped_news_suicide_data_sorted_2017_2007_filtrado.csv",  header=TRUE, sep=";")
all_data <- read.csv("all_2007-2017.csv",  header=TRUE, sep=";")
# Installation
# install.packages('ggplot2')
# Loading
library(ggplot2)
#ine_data$month_code<- as.Date(ine_data$month_code , "%Y/%m/%d")
#install.packages('lubridate')
library(lubridate)
ine_data$month_code <- ymd(ine_data$month_code)
scraping_data_filtered$month_code <- ymd(scraping_data_filtered$month_code)
ggplot(ine_data, aes(month_code, todas_edades)) + geom_line() + xlab("") + ylab("Suicidios")
ggplot(scraping_data_filtered, aes(month_code, number_of_suicide_news)) + geom_line() + xlab("") + ylab("Numero noticias suicidio")
plot(all_data$noticias_suicidio, all_data$suicidios, col = "blue", main = "", xlab = "noticias suicidio", ylab = "suicidios")
lm(all_data$noticias_suicidio ~ all_data$suicidios)
abline(lm(all_data$noticias_suicidio ~ all_data$suicidios))
cor(all_data$noticias_suicidio, all_data$suicidios)
# chi-squared test of independence
tbl = table(all_data$suicidios, all_data$noticias_suicidio)
chisq.test(tbl)
rdc(all_data$suicidios, all_data$noticias_suicidio)
install.packages('AlterCorr')
install.packages('altercorr')
AlterCorrM<-function(X,Y,type=c("pearson","MIC","RDC","dCor"),
comparison=c("all","pairs"),R=100 ,
method =c("holm", "hochberg", "hommel", "bonferroni",
"BH", "BY", "fdr", "none")){
type <- match.arg(type)
comp <- match.arg(comparison)
method <- match.arg(method)
if (! is.null(R)) {
R <- floor(R)
if (R < 1) R <- 100
} else {
R <- 100
}
if ((nrow(X)!=nrow(Y)) && type=="all") stop('The number of observations does not match')
if ((nrow(X)!=nrow(Y) ||(ncol(X)!=ncol(Y))) && type=="pairs") {
stop('Matrices dimensions do not match, select comparation="alls"')
}
if (comp=="all"){
Corrs<-matrix(NA,nrow=ncol(X),ncol=ncol(Y))
Pvalue<-matrix(NA,nrow=ncol(X),ncol=ncol(Y))
#adjPval<-matrix(NA,nrow=ncol(X),ncol=ncol(Y))
t<-1
k<-matrix(NA,nrow=ncol(X)*ncol(Y),ncol=3)
for (i in 1:ncol(X)){
for (j in 1:ncol(Y)){
z<-AlterCorr(X[,i], Y[,j], type=type,R=R)
Corrs[i,j] <- z$Correlation
Pvalue[i,j] <- z$pvalue
k[t,]<-cbind(i,j,z$pvalue)
t<-t+1
}
}
k<-as.data.frame(k)
colnames(k)<-c("X","Y","pvalue")
adj<- p.adjust(k$pvalue,method=method)
adjPval <- matrix(adj,nrow=ncol(X),ncol=ncol(Y),byrow = TRUE)
colnames(Corrs)<-colnames(Y)
colnames(Pvalue)<-colnames(Y)
colnames(adjPval)<-colnames(Y)
rownames(Corrs)<-colnames(X)
rownames(Pvalue)<-colnames(X)
rownames(adjPval)<-colnames(X)
}
if (comp=="pairs"){
Corrs<-matrix(NA,nrow=ncol(X),ncol=1)
Pvalue<-matrix(NA,nrow=ncol(X),ncol=1)
for (i in 1:ncol(X)){
z<-AlterCorr(X[,i], Y[,i], type=type,R=R)
Corrs[i,1] <- z$Correlation
Pvalue[i,1] <- z$pvalue
}
adjPval <- matrix(p.adjust(Pvalue,method=method),nrow=ncol(X),ncol=1)
rownames(Corrs)<-colnames(X)
rownames(Pvalue)<-colnames(X)
rownames(adjPval)<-colnames(X)
}
#adjPval<-p.adjust(Pvalue,method=method)
res<-(list(Correlation=Corrs, pvalue=Pvalue, adjPval=adjPval))
return(res)
}
AlterCorrM(all_data$suicidios, all_data$noticias_suicidio, type="RDC",comparison="all",method="fdr")
# https://github.com/AnaBPazos/AlterCorr/blob/master/R/AlterCorrM.R
cor.test(all_data$suicidios, all_data$noticias_suicidio, method = "kendall")
# https://github.com/AnaBPazos/AlterCorr/blob/master/R/AlterCorrM.R
cor.test(all_data$suicidios, all_data$noticias_suicidio, method = "kendall")
# chi-squared test of independence NOT VALID, categorized data only
# Kendall test
cor(all_data$suicidios, all_data$noticias_suicidio, method = "kendall")
# chi-squared test of independence NOT VALID, categorized data only
# Kendall test
cor.test(all_data$suicidios, all_data$noticias_suicidio, method = "kendall")
setwd("/home/hugo/Documents/hugo_documentos/github/data-tunning-scripts/plot-time-series-data")
ine_data <- read.csv("procesado_suicidio_edad_ambos_hasta_2007.csv",  header=TRUE, sep=";")
scraping_data_filtered <- read.csv("scraped_news_suicide_data_sorted_2017_2007_filtrado.csv",  header=TRUE, sep=";")
all_data <- read.csv("all_2007-2017.csv",  header=TRUE, sep=";")
# Installation
# install.packages('ggplot2')
# Loading
library(ggplot2)
#ine_data$month_code<- as.Date(ine_data$month_code , "%Y/%m/%d")
#install.packages('lubridate')
library(lubridate)
ine_data$month_code <- ymd(ine_data$month_code)
scraping_data_filtered$month_code <- ymd(scraping_data_filtered$month_code)
ggplot(ine_data, aes(month_code, todas_edades)) + geom_line() + xlab("") + ylab("Suicidios")
ggplot(scraping_data_filtered, aes(month_code, number_of_suicide_news)) + geom_line() + xlab("") + ylab("Numero noticias suicidio")
scraping_data_filtered <- read.csv("scraped_news_suicide_data_sorted_2017_2007_filtrado_no_outliers.csv",  header=TRUE, sep=";")
setwd("/home/hugo/Documents/hugo_documentos/github/data-tunning-scripts/plot-time-series-data")
ine_data <- read.csv("procesado_suicidio_edad_ambos_hasta_2007.csv",  header=TRUE, sep=";")
scraping_data_filtered <- read.csv("scraped_news_suicide_data_sorted_2017_2007_filtrado_no_outliers.csv",  header=TRUE, sep=";")
all_data <- read.csv("all_2007-2017_no_outliers.csv",  header=TRUE, sep=";")
# Installation
# install.packages('ggplot2')
# Loading
library(ggplot2)
#ine_data$month_code<- as.Date(ine_data$month_code , "%Y/%m/%d")
#install.packages('lubridate')
library(lubridate)
ine_data$month_code <- ymd(ine_data$month_code)
scraping_data_filtered$month_code <- ymd(scraping_data_filtered$month_code)
ggplot(ine_data, aes(month_code, todas_edades)) + geom_line() + xlab("") + ylab("Suicidios")
ggplot(scraping_data_filtered, aes(month_code, number_of_suicide_news)) + geom_line() + xlab("") + ylab("Numero noticias suicidio")
plot(all_data$noticias_suicidio, all_data$suicidios, col = "blue", main = "", xlab = "noticias suicidio", ylab = "suicidios")
lm(all_data$noticias_suicidio ~ all_data$suicidios)
abline(lm(all_data$noticias_suicidio ~ all_data$suicidios))
cor(all_data$noticias_suicidio, all_data$suicidios)
# chi-squared test of independence NOT VALID, categorized data only
tbl = table(all_data$suicidios, all_data$noticias_suicidio)
chisq.test(tbl)
# chi-squared test of independence NOT VALID, categorized data only
# Kendall test
cor.test(all_data$suicidios, all_data$noticias_suicidio, method = "kendall")
setwd("/home/hugo/Documents/hugo_documentos/github/data-tunning-scripts/plot-time-series-data")
ine_data <- read.csv("procesado_suicidio_edad_ambos_hasta_2007.csv",  header=TRUE, sep=";")
scraping_data_filtered <- read.csv("scraped_news_suicide_data_sorted_2017_2007_filtrado_no_outliers.csv",  header=TRUE, sep=";")
all_data <- read.csv("all_2007-2017_no_outliers.csv",  header=TRUE, sep=";")
# Installation
# install.packages('ggplot2')
# Loading
library(ggplot2)
#ine_data$month_code<- as.Date(ine_data$month_code , "%Y/%m/%d")
#install.packages('lubridate')
library(lubridate)
ine_data$month_code <- ymd(ine_data$month_code)
scraping_data_filtered$month_code <- ymd(scraping_data_filtered$month_code)
ggplot(ine_data, aes(month_code, todas_edades)) + geom_line() + xlab("") + ylab("Suicidios")
ggplot(scraping_data_filtered, aes(month_code, number_of_suicide_news)) + geom_line() + xlab("") + ylab("Numero noticias suicidio")
plot(all_data$noticias_suicidio, all_data$suicidios, col = "blue", main = "", xlab = "noticias suicidio", ylab = "suicidios")
lm(all_data$noticias_suicidio ~ all_data$suicidios)
abline(lm(all_data$noticias_suicidio ~ all_data$suicidios))
cor(all_data$noticias_suicidio, all_data$suicidios)
all_data <- read.csv("all_2007-2017_no_outliers.csv",  header=TRUE, sep=";")
setwd("/home/hugo/Documents/hugo_documentos/github/data-tunning-scripts/plot-time-series-data")
ine_data <- read.csv("procesado_suicidio_edad_ambos_hasta_2007.csv",  header=TRUE, sep=";")
scraping_data_filtered <- read.csv("scraped_news_suicide_data_sorted_2017_2007_filtrado_no_outliers.csv",  header=TRUE, sep=";")
all_data <- read.csv("all_2007-2017_no_outliers.csv",  header=TRUE, sep=";")
# Installation
# install.packages('ggplot2')
# Loading
library(ggplot2)
#ine_data$month_code<- as.Date(ine_data$month_code , "%Y/%m/%d")
#install.packages('lubridate')
library(lubridate)
ine_data$month_code <- ymd(ine_data$month_code)
scraping_data_filtered$month_code <- ymd(scraping_data_filtered$month_code)
ggplot(ine_data, aes(month_code, todas_edades)) + geom_line() + xlab("") + ylab("Suicidios")
ggplot(scraping_data_filtered, aes(month_code, number_of_suicide_news)) + geom_line() + xlab("") + ylab("Numero noticias suicidio")
plot(all_data$noticias_suicidio, all_data$suicidios, col = "blue", main = "", xlab = "noticias suicidio", ylab = "suicidios")
lm(all_data$noticias_suicidio ~ all_data$suicidios)
abline(lm(all_data$noticias_suicidio ~ all_data$suicidios))
cor(all_data$noticias_suicidio, all_data$suicidios)
# chi-squared test of independence NOT VALID, categorized data only
tbl = table(all_data$suicidios, all_data$noticias_suicidio)
chisq.test(tbl)
# chi-squared test of independence NOT VALID, categorized data only
# Kendall test
cor.test(all_data$suicidios, all_data$noticias_suicidio, method = "kendall")
# cross-correlation
ccf(ll_data$suicidios, all_data$noticias_suicidio,)
# cross-correlation
ccf(all_data$suicidios, all_data$noticias_suicidio,)
# cross-correlation
ccf(all_data$suicidios, log(all_data$noticias_suicidio),)
# cross-correlation
ccf(all_data$suicidios, all_data$noticias_suicidio,)
length(all_data)
length(all_data$noticias_suicidio)
2/sqrt(length(all_data$noticias_suicidio) - 15)
# cross-correlation
ccf(all_data$noticias_suicidio, all_data$suicidios)
ine_data <- read.csv("./procesado_suicidio_edad_ambos_hasta_2007.csv",  header=TRUE, sep=";")
scraping_data_filtered <- read.csv("scraped_news_suicide_data_sorted_2017_2007_filtrado_no_outliers.csv",  header=TRUE, sep=";")
all_data <- read.csv("./all_2007-2017_no_outliers.csv",  header=TRUE, sep=";")
# Installation
# install.packages('ggplot2')
# Loading
library(ggplot2)
#ine_data$month_code<- as.Date(ine_data$month_code , "%Y/%m/%d")
#install.packages('lubridate')
library(lubridate)
ine_data$month_code <- ymd(ine_data$month_code)
scraping_data_filtered$month_code <- ymd(scraping_data_filtered$month_code)
ggplot(ine_data, aes(month_code, todas_edades)) + geom_line() + xlab("") + ylab("Suicidios")
ggplot(scraping_data_filtered, aes(month_code, number_of_suicide_news)) + geom_line() + xlab("") + ylab("Numero noticias suicidio")
plot(all_data$noticias_suicidio, all_data$suicidios, col = "blue", main = "", xlab = "noticias suicidio", ylab = "suicidios")
lm(all_data$noticias_suicidio ~ all_data$suicidios)
